package edu.uwec.cs.kunseljp.dna;

import javax.swing.*;

/**
 * This type was generated by a SmartGuide.
 */
public class AlignmentGUI extends JFrame {

	private static final long serialVersionUID = 1L;
	private JPanel ivjAlignmentGUIPane = null;
	private JPanel ivjJFrameContentPane = null;
	private JTextField ivjString1Field = null;
	private JTextField ivjString2Field = null;
	private JButton ivjAlignButton = null;
	private JTextField ivjAlignedString1Field = null;
	private JTextField ivjAlignedString2Field = null;
	private JLabel ivjJLabel1 = null;
	private JLabel ivjJLabel2 = null;
	private JLabel ivjJLabel3 = null;
	private JLabel ivjJLabel4 = null;
	private JLabel ivjJLabel41 = null;
	private JLabel ivjJLabel42 = null;
	private JLabel ivjJLabel421 = null;
	private JLabel ivjJLabel43 = null;
	private JLabel ivjJLabel431 = null;
	private JLabel ivjJLabel4311 = null;
	private JLabel ivjJLabel432 = null;
	private JLabel ivjJLabel44 = null;
	private JLabel ivjJLabel441 = null;
	private JTextField ivjAA = null;
	private JTextField ivjAC = null;
	private JTextField ivjAG = null;
	private JTextField ivjAS = null;
	private JTextField ivjAT = null;
	private JTextField ivjCA = null;
	private JTextField ivjCC = null;
	private JTextField ivjCG = null;
	private JTextField ivjCS = null;
	private JTextField ivjCT = null;
	private JTextField ivjGA = null;
	private JTextField ivjGC = null;
	private JTextField ivjGG = null;
	private JTextField ivjGS = null;
	private JTextField ivjGT = null;
	private JTextField ivjSA = null;
	private JTextField ivjSC = null;
	private JTextField ivjSG = null;
	private JTextField ivjST = null;
	private JTextField ivjTA = null;
	private JTextField ivjTC = null;
	private JTextField ivjTG = null;
	private JTextField ivjTS = null;
	private JTextField ivjTT = null;

class IvjEventHandler implements java.awt.event.ActionListener, java.awt.event.KeyListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == AlignmentGUI.this.getAlignButton()) 
				connEtoC1(e);
		};
		public void keyPressed(java.awt.event.KeyEvent e) {};
		public void keyReleased(java.awt.event.KeyEvent e) {
			if (e.getSource() == AlignmentGUI.this.getTA()) 
				connEtoC3(e);
			if (e.getSource() == AlignmentGUI.this.getCA()) 
				connEtoC2(e);
			if (e.getSource() == AlignmentGUI.this.getGA()) 
				connEtoC4(e);
			if (e.getSource() == AlignmentGUI.this.getSA()) 
				connEtoC5(e);
			if (e.getSource() == AlignmentGUI.this.getGC()) 
				connEtoC6(e);
			if (e.getSource() == AlignmentGUI.this.getTC()) 
				connEtoC7(e);
			if (e.getSource() == AlignmentGUI.this.getSC()) 
				connEtoC8(e);
			if (e.getSource() == AlignmentGUI.this.getTG()) 
				connEtoC9(e);
			if (e.getSource() == AlignmentGUI.this.getSG()) 
				connEtoC10(e);
			if (e.getSource() == AlignmentGUI.this.getST()) 
				connEtoC11(e);
		};
		public void keyTyped(java.awt.event.KeyEvent e) {};
	};
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
/**
 * AlignmentGUI constructor comment.
 */
public AlignmentGUI() {
	super();
	initialize();
}
/**
 * AlignmentGUI constructor comment.
 * @param title java.lang.String
 */
public AlignmentGUI(String title) {
	super(title);
}
/**
 * Comment
 */
public void alignButton_ActionPerformed(java.awt.event.ActionEvent actionEvent) {

	// Grab the costMatching information and place it into a Map
	// Note that I can't have "+2" as a String as this doesn't
	//   form a new Integer properly
	java.util.Map<String, Integer> matchCost = new java.util.HashMap<String, Integer>();

	matchCost.put("AA", new Integer(getAA().getText()));
	matchCost.put("AC", new Integer(getAC().getText()));
	matchCost.put("AG", new Integer(getAG().getText()));
	matchCost.put("AT", new Integer(getAT().getText()));
	matchCost.put("A-", new Integer(getAS().getText()));

	matchCost.put("CA", new Integer(getCA().getText()));
	matchCost.put("CC", new Integer(getCC().getText()));
	matchCost.put("CG", new Integer(getCG().getText()));
	matchCost.put("CT", new Integer(getCT().getText()));
	matchCost.put("C-", new Integer(getCS().getText()));

	matchCost.put("GA", new Integer(getGA().getText()));
	matchCost.put("GC", new Integer(getGC().getText()));
	matchCost.put("GG", new Integer(getGG().getText()));
	matchCost.put("GT", new Integer(getGT().getText()));
	matchCost.put("G-", new Integer(getGS().getText()));

	matchCost.put("TA", new Integer(getTA().getText()));
	matchCost.put("TC", new Integer(getTC().getText()));
	matchCost.put("TG", new Integer(getTG().getText()));
	matchCost.put("TT", new Integer(getTT().getText()));
	matchCost.put("T-", new Integer(getTS().getText()));

	matchCost.put("-A", new Integer(getSA().getText()));
	matchCost.put("-C", new Integer(getSC().getText()));
	matchCost.put("-G", new Integer(getSG().getText()));
	matchCost.put("-T", new Integer(getST().getText()));
	

	// Create a new DNA matcher with the specified cost matrix
	DNAMatcher matcher = new DNAMatcher(matchCost);


	// Ask the DNA matcher to find a local alignment

	// Has got to be a better way to pass this information back to the GUI
		
	LocalAlignment alignment = matcher.findLocalAlignment(getString1Field().getText(), getString2Field().getText());

	alignment.showAlignment(getAlignedString1Field(), getAlignedString2Field());


}
/**
 * Comment
 */
public void cA_ActionEvents() {
	getAC().setText(getCA().getText());
}
/**
 * Comment
 */
public void cA_KeyPressed(java.awt.event.KeyEvent keyEvent) {
	getAC().setText(getCA().getText());
}
/**
 * Comment
 */
public void cA_KeyReleased(java.awt.event.KeyEvent keyEvent) {
	getAC().setText(getCA().getText());
}
/**
 * Comment
 */
public void cA_KeyTyped(java.awt.event.KeyEvent keyEvent) {
	getAC().setText(getCA().getText());
}
/**
 * Comment
 */
public void cA_PropertyChange(java.beans.PropertyChangeEvent propertyChangeEvent) {
	getAC().setText(getCA().getText());
}
/**
 * connEtoC1:  (AlignButton.action.actionPerformed(java.awt.event.ActionEvent) --> AlignmentGUI.alignButton_ActionPerformed(Ljava.awt.event.ActionEvent;)V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.alignButton_ActionPerformed(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC10:  (SG.key.keyReleased(java.awt.event.KeyEvent) --> AlignmentGUI.sG_KeyReleased(Ljava.awt.event.KeyEvent;)V)
 * @param arg1 java.awt.event.KeyEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC10(java.awt.event.KeyEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.sG_KeyReleased(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC11:  (ST.key.keyReleased(java.awt.event.KeyEvent) --> AlignmentGUI.sT_KeyReleased(Ljava.awt.event.KeyEvent;)V)
 * @param arg1 java.awt.event.KeyEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC11(java.awt.event.KeyEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.sT_KeyReleased(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC2:  (CA.key.keyReleased(java.awt.event.KeyEvent) --> AlignmentGUI.cA_KeyReleased(Ljava.awt.event.KeyEvent;)V)
 * @param arg1 java.awt.event.KeyEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC2(java.awt.event.KeyEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.cA_KeyReleased(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC3:  (TA.key.keyTyped(java.awt.event.KeyEvent) --> AlignmentGUI.tA_KeyTyped(Ljava.awt.event.KeyEvent;)V)
 * @param arg1 java.awt.event.KeyEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC3(java.awt.event.KeyEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.tA_KeyReleased(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC4:  (GA.key.keyReleased(java.awt.event.KeyEvent) --> AlignmentGUI.gA_KeyReleased(Ljava.awt.event.KeyEvent;)V)
 * @param arg1 java.awt.event.KeyEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC4(java.awt.event.KeyEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.gA_KeyReleased(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC5:  (SA.key.keyReleased(java.awt.event.KeyEvent) --> AlignmentGUI.sA_KeyReleased(Ljava.awt.event.KeyEvent;)V)
 * @param arg1 java.awt.event.KeyEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC5(java.awt.event.KeyEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.sA_KeyReleased(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC6:  (GC.key.keyReleased(java.awt.event.KeyEvent) --> AlignmentGUI.gC_KeyReleased(Ljava.awt.event.KeyEvent;)V)
 * @param arg1 java.awt.event.KeyEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC6(java.awt.event.KeyEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.gC_KeyReleased(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC7:  (TC.key.keyReleased(java.awt.event.KeyEvent) --> AlignmentGUI.tC_KeyReleased(Ljava.awt.event.KeyEvent;)V)
 * @param arg1 java.awt.event.KeyEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC7(java.awt.event.KeyEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.tC_KeyReleased(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC8:  (SC.key.keyReleased(java.awt.event.KeyEvent) --> AlignmentGUI.sC_KeyReleased(Ljava.awt.event.KeyEvent;)V)
 * @param arg1 java.awt.event.KeyEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC8(java.awt.event.KeyEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.sC_KeyReleased(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * connEtoC9:  (TG.key.keyReleased(java.awt.event.KeyEvent) --> AlignmentGUI.tG_KeyReleased(Ljava.awt.event.KeyEvent;)V)
 * @param arg1 java.awt.event.KeyEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoC9(java.awt.event.KeyEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.tG_KeyReleased(arg1);
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Comment
 */
public void gA_KeyReleased(java.awt.event.KeyEvent keyEvent) {
	getAG().setText(getGA().getText());
}
/**
 * Comment
 */
public void gC_KeyReleased(java.awt.event.KeyEvent keyEvent) {
	getCG().setText(getGC().getText());
}
/**
 * Return the JTextField1 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getAA() {
	if (ivjAA == null) {
		try {
			ivjAA = new javax.swing.JTextField();
			ivjAA.setName("AA");
			ivjAA.setText("2");
			ivjAA.setBounds(358, 64, 21, 20);
			ivjAA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAA;
}
/**
 * Return the JTextField14 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getAC() {
	if (ivjAC == null) {
		try {
			ivjAC = new javax.swing.JTextField();
			ivjAC.setName("AC");
			ivjAC.setText("-2");
			ivjAC.setBounds(358, 88, 21, 20);
			ivjAC.setEnabled(false);
			ivjAC.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAC;
}
/**
 * Return the JTextField141 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getAG() {
	if (ivjAG == null) {
		try {
			ivjAG = new javax.swing.JTextField();
			ivjAG.setName("AG");
			ivjAG.setText("-2");
			ivjAG.setBounds(358, 111, 21, 20);
			ivjAG.setEnabled(false);
			ivjAG.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAG;
}
/**
 * Return the AlignButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getAlignButton() {
	if (ivjAlignButton == null) {
		try {
			ivjAlignButton = new javax.swing.JButton();
			ivjAlignButton.setName("AlignButton");
			ivjAlignButton.setText("Align");
			ivjAlignButton.setBounds(113, 127, 85, 25);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAlignButton;
}
/**
 * Return the AlignedString1Field property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getAlignedString1Field() {
	if (ivjAlignedString1Field == null) {
		try {
			ivjAlignedString1Field = new javax.swing.JTextField();
			ivjAlignedString1Field.setName("AlignedString1Field");
			ivjAlignedString1Field.setFont(new java.awt.Font("monospaced", 0, 12));
			ivjAlignedString1Field.setBounds(30, 182, 260, 20);
			ivjAlignedString1Field.setEditable(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAlignedString1Field;
}
/**
 * Return the AlignedString2Field property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getAlignedString2Field() {
	if (ivjAlignedString2Field == null) {
		try {
			ivjAlignedString2Field = new javax.swing.JTextField();
			ivjAlignedString2Field.setName("AlignedString2Field");
			ivjAlignedString2Field.setFont(new java.awt.Font("monospaced", 0, 12));
			ivjAlignedString2Field.setBounds(30, 213, 260, 20);
			ivjAlignedString2Field.setEditable(false);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAlignedString2Field;
}
/**
 * Return the AlignmentGUIPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getAlignmentGUIPane() {
	if (ivjAlignmentGUIPane == null) {
		try {
			ivjAlignmentGUIPane = new javax.swing.JPanel();
			ivjAlignmentGUIPane.setName("AlignmentGUIPane");
			ivjAlignmentGUIPane.setLayout(null);
			getAlignmentGUIPane().add(getString1Field(), getString1Field().getName());
			getAlignmentGUIPane().add(getString2Field(), getString2Field().getName());
			getAlignmentGUIPane().add(getAlignButton(), getAlignButton().getName());
			getAlignmentGUIPane().add(getAlignedString1Field(), getAlignedString1Field().getName());
			getAlignmentGUIPane().add(getAlignedString2Field(), getAlignedString2Field().getName());
			getAlignmentGUIPane().add(getJLabel1(), getJLabel1().getName());
			getAlignmentGUIPane().add(getJLabel2(), getJLabel2().getName());
			getAlignmentGUIPane().add(getJLabel3(), getJLabel3().getName());
			getAlignmentGUIPane().add(getJLabel4(), getJLabel4().getName());
			getAlignmentGUIPane().add(getJLabel41(), getJLabel41().getName());
			getAlignmentGUIPane().add(getJLabel42(), getJLabel42().getName());
			getAlignmentGUIPane().add(getJLabel43(), getJLabel43().getName());
			getAlignmentGUIPane().add(getJLabel44(), getJLabel44().getName());
			getAlignmentGUIPane().add(getJLabel441(), getJLabel441().getName());
			getAlignmentGUIPane().add(getJLabel431(), getJLabel431().getName());
			getAlignmentGUIPane().add(getJLabel421(), getJLabel421().getName());
			getAlignmentGUIPane().add(getJLabel432(), getJLabel432().getName());
			getAlignmentGUIPane().add(getJLabel4311(), getJLabel4311().getName());
			getAlignmentGUIPane().add(getAA(), getAA().getName());
			getAlignmentGUIPane().add(getCA(), getCA().getName());
			getAlignmentGUIPane().add(getGA(), getGA().getName());
			getAlignmentGUIPane().add(getTA(), getTA().getName());
			getAlignmentGUIPane().add(getSA(), getSA().getName());
			getAlignmentGUIPane().add(getAC(), getAC().getName());
			getAlignmentGUIPane().add(getCC(), getCC().getName());
			getAlignmentGUIPane().add(getGC(), getGC().getName());
			getAlignmentGUIPane().add(getTC(), getTC().getName());
			getAlignmentGUIPane().add(getSC(), getSC().getName());
			getAlignmentGUIPane().add(getAG(), getAG().getName());
			getAlignmentGUIPane().add(getCG(), getCG().getName());
			getAlignmentGUIPane().add(getGG(), getGG().getName());
			getAlignmentGUIPane().add(getTG(), getTG().getName());
			getAlignmentGUIPane().add(getSG(), getSG().getName());
			getAlignmentGUIPane().add(getAT(), getAT().getName());
			getAlignmentGUIPane().add(getCT(), getCT().getName());
			getAlignmentGUIPane().add(getGT(), getGT().getName());
			getAlignmentGUIPane().add(getTT(), getTT().getName());
			getAlignmentGUIPane().add(getST(), getST().getName());
			getAlignmentGUIPane().add(getAS(), getAS().getName());
			getAlignmentGUIPane().add(getCS(), getCS().getName());
			getAlignmentGUIPane().add(getGS(), getGS().getName());
			getAlignmentGUIPane().add(getTS(), getTS().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAlignmentGUIPane;
}
/**
 * Return the JTextField14111 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getAS() {
	if (ivjAS == null) {
		try {
			ivjAS = new javax.swing.JTextField();
			ivjAS.setName("AS");
			ivjAS.setText("-1");
			ivjAS.setBounds(357, 158, 21, 20);
			ivjAS.setEnabled(false);
			ivjAS.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAS;
}
/**
 * Return the JTextField1411 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getAT() {
	if (ivjAT == null) {
		try {
			ivjAT = new javax.swing.JTextField();
			ivjAT.setName("AT");
			ivjAT.setText("-2");
			ivjAT.setBounds(358, 134, 21, 20);
			ivjAT.setEnabled(false);
			ivjAT.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAT;
}

/**
 * Return the JTextField11 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getCA() {
	if (ivjCA == null) {
		try {
			ivjCA = new javax.swing.JTextField();
			ivjCA.setName("CA");
			ivjCA.setText("-2");
			ivjCA.setBounds(383, 64, 21, 20);
			ivjCA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCA;
}
/**
 * Return the JTextField111 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getCC() {
	if (ivjCC == null) {
		try {
			ivjCC = new javax.swing.JTextField();
			ivjCC.setName("CC");
			ivjCC.setText("4");
			ivjCC.setBounds(383, 88, 21, 20);
			ivjCC.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCC;
}
/**
 * Return the JTextField1111 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getCG() {
	if (ivjCG == null) {
		try {
			ivjCG = new javax.swing.JTextField();
			ivjCG.setName("CG");
			ivjCG.setText("-1");
			ivjCG.setBounds(383, 111, 21, 20);
			ivjCG.setEnabled(false);
			ivjCG.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCG;
}
/**
 * Return the JTextField111111 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getCS() {
	if (ivjCS == null) {
		try {
			ivjCS = new javax.swing.JTextField();
			ivjCS.setName("CS");
			ivjCS.setText("-1");
			ivjCS.setBounds(382, 158, 21, 20);
			ivjCS.setEnabled(false);
			ivjCS.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCS;
}
/**
 * Return the JTextField11111 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getCT() {
	if (ivjCT == null) {
		try {
			ivjCT = new javax.swing.JTextField();
			ivjCT.setName("CT");
			ivjCT.setText("-3");
			ivjCT.setBounds(383, 134, 21, 20);
			ivjCT.setEnabled(false);
			ivjCT.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjCT;
}
/**
 * Return the JTextField12 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getGA() {
	if (ivjGA == null) {
		try {
			ivjGA = new javax.swing.JTextField();
			ivjGA.setName("GA");
			ivjGA.setText("-2");
			ivjGA.setBounds(406, 64, 21, 20);
			ivjGA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGA;
}
/**
 * Return the JTextField121 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getGC() {
	if (ivjGC == null) {
		try {
			ivjGC = new javax.swing.JTextField();
			ivjGC.setName("GC");
			ivjGC.setText("-1");
			ivjGC.setBounds(406, 88, 21, 20);
			ivjGC.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGC;
}
/**
 * Return the JTextField1211 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getGG() {
	if (ivjGG == null) {
		try {
			ivjGG = new javax.swing.JTextField();
			ivjGG.setName("GG");
			ivjGG.setText("3");
			ivjGG.setBounds(406, 111, 21, 20);
			ivjGG.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGG;
}
/**
 * Return the JTextField121111 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getGS() {
	if (ivjGS == null) {
		try {
			ivjGS = new javax.swing.JTextField();
			ivjGS.setName("GS");
			ivjGS.setText("-1");
			ivjGS.setBounds(405, 158, 21, 20);
			ivjGS.setEnabled(false);
			ivjGS.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGS;
}
/**
 * Return the JTextField12111 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getGT() {
	if (ivjGT == null) {
		try {
			ivjGT = new javax.swing.JTextField();
			ivjGT.setName("GT");
			ivjGT.setText("-3");
			ivjGT.setBounds(406, 134, 21, 20);
			ivjGT.setEnabled(false);
			ivjGT.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjGT;
}
/**
 * Return the JFrameContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJFrameContentPane() {
	if (ivjJFrameContentPane == null) {
		try {
			ivjJFrameContentPane = new javax.swing.JPanel();
			ivjJFrameContentPane.setName("JFrameContentPane");
			ivjJFrameContentPane.setLayout(new java.awt.BorderLayout());
			getJFrameContentPane().add(getAlignmentGUIPane(), "Center");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJFrameContentPane;
}
/**
 * Return the JLabel1 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel1() {
	if (ivjJLabel1 == null) {
		try {
			ivjJLabel1 = new javax.swing.JLabel();
			ivjJLabel1.setName("JLabel1");
			ivjJLabel1.setText("Input Strings");
			ivjJLabel1.setBounds(117, 19, 95, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel1;
}
/**
 * Return the JLabel2 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel2() {
	if (ivjJLabel2 == null) {
		try {
			ivjJLabel2 = new javax.swing.JLabel();
			ivjJLabel2.setName("JLabel2");
			ivjJLabel2.setText("Aligned Strings");
			ivjJLabel2.setBounds(113, 238, 87, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel2;
}
/**
 * Return the JLabel3 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel3() {
	if (ivjJLabel3 == null) {
		try {
			ivjJLabel3 = new javax.swing.JLabel();
			ivjJLabel3.setName("JLabel3");
			ivjJLabel3.setText("Match Costs");
			ivjJLabel3.setBounds(373, 24, 80, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel3;
}
/**
 * Return the JLabel4 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel4() {
	if (ivjJLabel4 == null) {
		try {
			ivjJLabel4 = new javax.swing.JLabel();
			ivjJLabel4.setName("JLabel4");
			ivjJLabel4.setText("A");
			ivjJLabel4.setBounds(342, 68, 12, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel4;
}
/**
 * Return the JLabel41 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel41() {
	if (ivjJLabel41 == null) {
		try {
			ivjJLabel41 = new javax.swing.JLabel();
			ivjJLabel41.setName("JLabel41");
			ivjJLabel41.setText("C");
			ivjJLabel41.setBounds(342, 91, 12, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel41;
}
/**
 * Return the JLabel42 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel42() {
	if (ivjJLabel42 == null) {
		try {
			ivjJLabel42 = new javax.swing.JLabel();
			ivjJLabel42.setName("JLabel42");
			ivjJLabel42.setText("G");
			ivjJLabel42.setBounds(342, 113, 12, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel42;
}
/**
 * Return the JLabel421 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel421() {
	if (ivjJLabel421 == null) {
		try {
			ivjJLabel421 = new javax.swing.JLabel();
			ivjJLabel421.setName("JLabel421");
			ivjJLabel421.setText("G");
			ivjJLabel421.setBounds(412, 46, 12, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel421;
}
/**
 * Return the JLabel43 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel43() {
	if (ivjJLabel43 == null) {
		try {
			ivjJLabel43 = new javax.swing.JLabel();
			ivjJLabel43.setName("JLabel43");
			ivjJLabel43.setText("T");
			ivjJLabel43.setBounds(342, 136, 12, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel43;
}
/**
 * Return the JLabel431 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel431() {
	if (ivjJLabel431 == null) {
		try {
			ivjJLabel431 = new javax.swing.JLabel();
			ivjJLabel431.setName("JLabel431");
			ivjJLabel431.setText("---");
			ivjJLabel431.setBounds(342, 160, 12, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel431;
}
/**
 * Return the JLabel4311 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel4311() {
	if (ivjJLabel4311 == null) {
		try {
			ivjJLabel4311 = new javax.swing.JLabel();
			ivjJLabel4311.setName("JLabel4311");
			ivjJLabel4311.setText("---");
			ivjJLabel4311.setBounds(460, 46, 12, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel4311;
}
/**
 * Return the JLabel432 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel432() {
	if (ivjJLabel432 == null) {
		try {
			ivjJLabel432 = new javax.swing.JLabel();
			ivjJLabel432.setName("JLabel432");
			ivjJLabel432.setText("T");
			ivjJLabel432.setBounds(438, 46, 12, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel432;
}
/**
 * Return the JLabel44 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel44() {
	if (ivjJLabel44 == null) {
		try {
			ivjJLabel44 = new javax.swing.JLabel();
			ivjJLabel44.setName("JLabel44");
			ivjJLabel44.setText("A");
			ivjJLabel44.setBounds(368, 46, 12, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel44;
}
/**
 * Return the JLabel441 property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getJLabel441() {
	if (ivjJLabel441 == null) {
		try {
			ivjJLabel441 = new javax.swing.JLabel();
			ivjJLabel441.setName("JLabel441");
			ivjJLabel441.setText("C");
			ivjJLabel441.setBounds(389, 46, 12, 14);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJLabel441;
}
/**
 * Return the JTextField131 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getSA() {
	if (ivjSA == null) {
		try {
			ivjSA = new javax.swing.JTextField();
			ivjSA.setName("SA");
			ivjSA.setText("-1");
			ivjSA.setBounds(454, 64, 21, 20);
			ivjSA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSA;
}
/**
 * Return the JTextField1311 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getSC() {
	if (ivjSC == null) {
		try {
			ivjSC = new javax.swing.JTextField();
			ivjSC.setName("SC");
			ivjSC.setText("-1");
			ivjSC.setBounds(454, 88, 21, 20);
			ivjSC.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSC;
}
/**
 * Return the JTextField13111 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getSG() {
	if (ivjSG == null) {
		try {
			ivjSG = new javax.swing.JTextField();
			ivjSG.setName("SG");
			ivjSG.setText("-1");
			ivjSG.setBounds(454, 111, 21, 20);
			ivjSG.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjSG;
}
/**
 * Return the JTextField131111 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getST() {
	if (ivjST == null) {
		try {
			ivjST = new javax.swing.JTextField();
			ivjST.setName("ST");
			ivjST.setText("-1");
			ivjST.setBounds(454, 134, 21, 20);
			ivjST.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjST;
}
/**
 * Return the String1Field property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getString1Field() {
	if (ivjString1Field == null) {
		try {
			ivjString1Field = new javax.swing.JTextField();
			ivjString1Field.setName("String1Field");
			ivjString1Field.setFont(new java.awt.Font("monospaced", 0, 12));
			ivjString1Field.setText("AGATGGAATGATTAG");
			ivjString1Field.setBounds(31, 41, 260, 20);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjString1Field;
}
/**
 * Return the String2Field property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getString2Field() {
	if (ivjString2Field == null) {
		try {
			ivjString2Field = new javax.swing.JTextField();
			ivjString2Field.setName("String2Field");
			ivjString2Field.setFont(new java.awt.Font("monospaced", 0, 12));
			ivjString2Field.setText("CGACTATT");
			ivjString2Field.setBounds(31, 63, 260, 20);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjString2Field;
}
/**
 * Return the JTextField13 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getTA() {
	if (ivjTA == null) {
		try {
			ivjTA = new javax.swing.JTextField();
			ivjTA.setName("TA");
			ivjTA.setText("-2");
			ivjTA.setBounds(430, 64, 21, 20);
			ivjTA.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTA;
}
/**
 * Return the JTextField132 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getTC() {
	if (ivjTC == null) {
		try {
			ivjTC = new javax.swing.JTextField();
			ivjTC.setName("TC");
			ivjTC.setText("-3");
			ivjTC.setBounds(430, 88, 21, 20);
			ivjTC.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTC;
}
/**
 * Return the JTextField1321 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getTG() {
	if (ivjTG == null) {
		try {
			ivjTG = new javax.swing.JTextField();
			ivjTG.setName("TG");
			ivjTG.setText("-3");
			ivjTG.setBounds(430, 111, 21, 20);
			ivjTG.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTG;
}
/**
 * Return the JTextField132111 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getTS() {
	if (ivjTS == null) {
		try {
			ivjTS = new javax.swing.JTextField();
			ivjTS.setName("TS");
			ivjTS.setText("-1");
			ivjTS.setBounds(429, 158, 21, 20);
			ivjTS.setEnabled(false);
			ivjTS.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTS;
}
/**
 * Return the JTextField13211 property value.
 * @return javax.swing.JTextField
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextField getTT() {
	if (ivjTT == null) {
		try {
			ivjTT = new javax.swing.JTextField();
			ivjTT.setName("TT");
			ivjTT.setText("2");
			ivjTT.setBounds(430, 134, 21, 20);
			ivjTT.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTT;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {

	/* Uncomment the following lines to print uncaught exceptions to stdout */
	// System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	// exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getAlignButton().addActionListener(ivjEventHandler);
	getTA().addKeyListener(ivjEventHandler);
	getCA().addKeyListener(ivjEventHandler);
	getGA().addKeyListener(ivjEventHandler);
	getSA().addKeyListener(ivjEventHandler);
	getGC().addKeyListener(ivjEventHandler);
	getTC().addKeyListener(ivjEventHandler);
	getSC().addKeyListener(ivjEventHandler);
	getTG().addKeyListener(ivjEventHandler);
	getSG().addKeyListener(ivjEventHandler);
	getST().addKeyListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("AlignmentGUI");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setSize(507, 289);
		setTitle("Local Alignment");
		setContentPane(getJFrameContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * Comment
 */
public void jTextField11_KeyTyped(java.awt.event.KeyEvent keyEvent) {
	return;
}
/**
 * Starts the application.
 * @param args an array of command-line arguments
 */
public static void main(java.lang.String[] args) {
	try {
		/* Set native look and feel */
		UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
		/* Create the frame */
		AlignmentGUI aAlignmentGUI = new AlignmentGUI();
		/* Add a windowListener for the windowClosedEvent */
		
		// Do this the new 1.3 way
		aAlignmentGUI.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//		aAlignmentGUI.addWindowListener(new java.awt.event.WindowAdapter() {
//			public void windowClosed(java.awt.event.WindowEvent e) {
//				System.exit(0);
//			};
//		});
		aAlignmentGUI.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of AlignmentGUI");
		exception.printStackTrace(System.out);
	}
}
/**
 * Comment
 */
public void sA_KeyReleased(java.awt.event.KeyEvent keyEvent) {
	getAS().setText(getSA().getText());
}
/**
 * Comment
 */
public void sC_KeyReleased(java.awt.event.KeyEvent keyEvent) {
	getCS().setText(getSC().getText());
}
/**
 * Comment
 */
public void sG_KeyReleased(java.awt.event.KeyEvent keyEvent) {
	getGS().setText(getSG().getText());
}
/**
 * Comment
 */
public void sT_KeyReleased(java.awt.event.KeyEvent keyEvent) {
	getTS().setText(getST().getText());
}
/**
 * Comment
 */
public void tA_KeyReleased(java.awt.event.KeyEvent keyEvent) {
	getAT().setText(getTA().getText());
}
/**
 * Comment
 */
public void tC_KeyReleased(java.awt.event.KeyEvent keyEvent) {
	getCT().setText(getTC().getText());
}
/**
 * Comment
 */
public void tG_KeyReleased(java.awt.event.KeyEvent keyEvent) {
	getGT().setText(getTG().getText());
}
}